diff --git a/node_modules/react-native-emoji-selector/index.js b/node_modules/react-native-emoji-selector/index.js
index 0737acd..2737ac4 100644
--- a/node_modules/react-native-emoji-selector/index.js
+++ b/node_modules/react-native-emoji-selector/index.js
@@ -81,8 +81,8 @@ const TabBar = ({ theme, activeCategory, onPress, width }) => {
           style={{
             flex: 1,
             height: tabSize,
-            borderColor: category === activeCategory ? theme : "#EEEEEE",
-            borderBottomWidth: 2,
+            borderColor:  '#EEEEEE' ,
+            borderBottomWidth: category === activeCategory ? 1:0,
             alignItems: "center",
             justifyContent: "center"
           }}
@@ -91,7 +91,7 @@ const TabBar = ({ theme, activeCategory, onPress, width }) => {
             style={{
               textAlign: "center",
               paddingBottom: 8,
-              fontSize: tabSize - 24
+              fontSize: Math.max(tabSize - 20, 12)
             }}
           >
             {category.symbol}
@@ -112,7 +112,7 @@ const EmojiCell = ({ emoji, colSize, ...other }) => (
     }}
     {...other}
   >
-    <Text style={{ color: "#FFFFFF", fontSize: colSize - 12 }}>
+    <Text style={{ color: "#FFFFFF", fontSize: Math.max(colSize - 12, 16) }}>
       {charFromEmojiObject(emoji)}
     </Text>
   </TouchableOpacity>
@@ -180,11 +180,16 @@ export default class EmojiSelector extends Component {
   };
 
   loadHistoryAsync = async () => {
-    let result = await AsyncStorage.getItem(storage_key);
-    if (result) {
-      let history = JSON.parse(result);
-      this.setState({ history });
+    try {
+      let result = await AsyncStorage.getItem(storage_key);
+      if (result) {
+        let history = JSON.parse(result);
+        this.setState({ history });
+      }
+    } catch (error) {
+      
     }
+   
   };
 
   //
@@ -295,9 +300,9 @@ export default class EmojiSelector extends Component {
           clearButtonMode="always"
           returnKeyType="done"
           autoCorrect={false}
-          underlineColorAndroid={theme}
           value={searchQuery}
           onChangeText={this.handleSearch}
+          placeholderTextColor={'#D6D6D6'}
         />
       </View>
     );
@@ -381,9 +386,16 @@ const styles = StyleSheet.create({
   searchbar_container: {
     width: "100%",
     zIndex: 1,
-    backgroundColor: "rgba(255,255,255,0.75)"
   },
   search: {
+    backgroundColor: '#424242',
+    padding:0,
+    borderRadius:16,
+    fontSize:12,
+    borderWidth:0,
+    paddingVertical:6,
+    paddingHorizontal:8,
+    color:'#D6D6D6',
     ...Platform.select({
       ios: {
         height: 36,
@@ -393,6 +405,7 @@ const styles = StyleSheet.create({
       }
     }),
     margin: 8
+
   },
   container: {
     flex: 1,
